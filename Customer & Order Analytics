#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

#1. How many orders were placed in January? 
SELECT Count(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
;

#2. How many of those orders were for an iPhone? 
SELECT COUNT(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND Product = 'iPhone'
;

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT DISTINCT cust.acctnum
FROM FebSales

JOIN customers cust
ON Febsales.orderID = cust.order_id

WHERE length(FebSales.orderID)=6
AND FebSales.orderID <> 'Order ID'
;

#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT distinct Product, price
FROM BIT_DB.JanSales
WHERE price IN (SELECT min(price) FROM BIT_DB.JanSales)
;

#5. What is the total revenue for each product sold in January?
SELECT Product, ROUND(SUM(Quantity)*price) AS Revenue
FROM BIT_DB.JanSales
WHERE Product <> 'Product'
AND Length(Product) >1
GROUP BY Product
;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, Quantity, ROUND(SUM(Quantity)*price) AS Revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
;

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT DISTINCT COUNT(cust.acctnum) multiple, AVG(feb.Quantity*feb.price) spent
FROM BIT_DB.customers cust

LEFT JOIN BIT_DB.FebSales feb
ON cust.order_id = feb.orderID

WHERE feb.Quantity > 2
AND cust.order_id <> 'Order ID'
AND length(cust.order_id) = 6
;

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product
